name: ci

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  rustfmt:
    name: Formatting
    runs-on: ubuntu-22.04
    steps:
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          components: rustfmt
          override: true
      - name: Checkout
        uses: actions/checkout@v3
      - name: Check the formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  check:
    name: Check
    needs: rustfmt
    runs-on: ubuntu-22.04
    steps:
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      - name: Checkout
        uses: actions/checkout@v3
      - name: Check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --locked

  test:
    name: Test
    needs: rustfmt
    runs-on: ubuntu-22.04
    steps:
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      - name: Checkout
        if: github.event_name != 'pull_request'
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Checkout
        if: github.event_name == 'pull_request'
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0
      - name: Setup cargo-tarpaulin
        run: |
          curl -s https://api.github.com/repos/xd009642/tarpaulin/releases/tags/0.22.0 | \
            grep "browser_download_url.*tar.gz" | cut -d : -f 2,3 | tr -d \" | wget -qi -
          tar -xzf cargo-tarpaulin-*.tar.gz
          mv cargo-tarpaulin ~/.cargo/bin/
      - name: Run tests
        run: cargo tarpaulin --out Xml --verbose
      - name: Upload reports to codecov
        uses: codecov/codecov-action@v3
        with:
          name: code-coverage-report
          file: cobertura.xml
          flags: unit-tests
          fail_ci_if_error: true
          verbose: true

  clippy:
    name: Lint
    needs: rustfmt
    runs-on: ubuntu-22.04
    steps:
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          components: clippy
          override: true
      - name: Checkout
        uses: actions/checkout@v3
      - name: Check the lints
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --tests -- -D warnings
